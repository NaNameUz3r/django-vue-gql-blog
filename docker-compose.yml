version: '3.7'
services:
  nginx:
    build:
      context: ./nginx 
    depends_on:
      - backend
    volumes:
      - static:/var/www/static/:default
      - images:/var/www/images/:default
      - frontend:/var/www/frontend:default
    depends_on:
      - backend
    ports:
      - 80:80
      - 443:443
    logging:
      driver: journald
      options:
        tag: nginx

  backend:
    restart: always
    ports:
      - "8000:8000"
    build:
      context: ./backend
    entrypoint: sh /home/app/backend/entrypoint.sh
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DEBUG=False
    depends_on:
      - db
    volumes:
      - static:/home/app/staticfiles/:default
      - images:/home/app/images/:default
    logging:
      driver: journald
      options:
        tag: backend


  frontend:
    restart: always
    ports:
      - "8080:8080"
    build:
      context: ./frontend
    volumes:
      - frontend:/static/:default
      - images:/app/public/images/:default
    # command: http-server dist
    command: npm run serve


  db:
    image: postgres:12.3-alpine
    restart: always
    volumes:
      - postgresdata:/var/lib/postgresql/data
    ports:
      - 127.0.0.1:5433:5432
    environment:
      - POSTGRES_PASSWORD=postgres
    command: postgres -c 'shared_buffers=256MB' -c 'work_mem=8MB'
    logging:
      driver: journald
      options:
        tag: db


volumes:
  postgresdata:
  static:
  images:
  frontend:
