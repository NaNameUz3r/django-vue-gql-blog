{"remainingRequest":"/home/dude/Projects/django-vue-graphql/frontend/node_modules/babel-loader/lib/index.js!/home/dude/Projects/django-vue-graphql/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dude/Projects/django-vue-graphql/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dude/Projects/django-vue-graphql/frontend/src/components/PostsByTag.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dude/Projects/django-vue-graphql/frontend/src/components/PostsByTag.vue","mtime":1634493593754},{"path":"/home/dude/Projects/django-vue-graphql/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1634293257960},{"path":"/home/dude/Projects/django-vue-graphql/frontend/node_modules/babel-loader/lib/index.js","mtime":1634293257962},{"path":"/home/dude/Projects/django-vue-graphql/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1634293257960},{"path":"/home/dude/Projects/django-vue-graphql/frontend/node_modules/vue-loader/lib/index.js","mtime":1634293263659}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwgZnJvbSAiL2hvbWUvZHVkZS9Qcm9qZWN0cy9kamFuZ28tdnVlLWdyYXBocWwvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9kdWRlL1Byb2plY3RzL2RqYW5nby12dWUtZ3JhcGhxbC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Cgp2YXIgX3RlbXBsYXRlT2JqZWN0OwoKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgUG9zdExpc3QgZnJvbSAnQC9jb21wb25lbnRzL1Bvc3RMaXN0JzsKaW1wb3J0IGdxbCBmcm9tICdncmFwaHFsLXRhZyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUG9zdHNCeVRhZycsCiAgY29tcG9uZW50czogewogICAgUG9zdExpc3Q6IFBvc3RMaXN0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcG9zdHM6IG51bGwKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgcG9zdHM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGFwb2xsby5xdWVyeSh7CiAgICAgICAgICAgICAgICBxdWVyeTogZ3FsKF90ZW1wbGF0ZU9iamVjdCB8fCAoX3RlbXBsYXRlT2JqZWN0ID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbInF1ZXJ5ICgkdGFnOiBTdHJpbmchKSB7XG4gICAgICAgIHBvc3RzQnlUYWcodGFnOiAkdGFnKSB7XG4gICAgICAgICAgdGl0bGVcbiAgICAgICAgICBzdWJ0aXRsZVxuICAgICAgICAgIHB1Ymxpc2hEYXRlXG4gICAgICAgICAgcHVibGlzaGVkXG4gICAgICAgICAgbWV0YURlc2NyaXB0aW9uXG4gICAgICAgICAgc2x1Z1xuICAgICAgICAgIGF1dGhvciB7XG4gICAgICAgICAgICB1c2VyIHtcbiAgICAgICAgICAgICAgdXNlcm5hbWVcbiAgICAgICAgICAgICAgZmlyc3ROYW1lXG4gICAgICAgICAgICAgIGxhc3ROYW1lXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIHRhZ3Mge1xuICAgICAgICAgICAgbmFtZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSJdKSkpLAogICAgICAgICAgICAgICAgdmFyaWFibGVzOiB7CiAgICAgICAgICAgICAgICAgIHRhZzogX3RoaXMuJHJvdXRlLnBhcmFtcy50YWcKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBwb3N0cyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgX3RoaXMucG9zdHMgPSBwb3N0cy5kYXRhLnBvc3RzQnlUYWc7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfQp9Ow=="},{"version":3,"sources":["PostsByTag.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAQA,OAAA,QAAA,MAAA,uBAAA;AACA,OAAA,GAAA,MAAA,aAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GATA;AAUA,EAAA,OAVA,qBAUA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA;AACA,gBAAA,KAAA,EAAA,GAAA,2cADA;AAqBA,gBAAA,SAAA,EAAA;AACA,kBAAA,GAAA,EAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AADA;AArBA,eAAA,CADA;;AAAA;AACA,cAAA,KADA;AA0BA,cAAA,KAAA,CAAA,KAAA,GAAA,KAAA,CAAA,IAAA,CAAA,UAAA;;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AArCA,CAAA","sourcesContent":["<template>\n  <div>\n    <h2>Posts in #{{ $route.params.tag }}</h2>\n    <PostList :posts=\"posts\" v-if=\"posts\" />\n  </div>\n</template>\n\n<script>\nimport PostList from '@/components/PostList'\nimport gql from 'graphql-tag'\n\nexport default {\n  name: 'PostsByTag',\n  components: {\n    PostList,\n  },\n  data () {\n    return {\n      posts: null,\n    }\n  },\n  async created () {\n    const posts = await this.$apollo.query({\n      query: gql`query ($tag: String!) {\n        postsByTag(tag: $tag) {\n          title\n          subtitle\n          publishDate\n          published\n          metaDescription\n          slug\n          author {\n            user {\n              username\n              firstName\n              lastName\n            }\n          }\n          tags {\n            name\n          }\n        }\n      }`,\n      variables: {\n        tag: this.$route.params.tag,\n      },\n    })\n    this.posts = posts.data.postsByTag\n  },\n}\n</script>\n"],"sourceRoot":"src/components"}]}