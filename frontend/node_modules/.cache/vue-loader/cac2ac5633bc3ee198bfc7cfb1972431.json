{"remainingRequest":"/home/dude/Projects/django-vue-graphql/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dude/Projects/django-vue-graphql/frontend/src/components/PostsByTag.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dude/Projects/django-vue-graphql/frontend/src/components/PostsByTag.vue","mtime":1634493593754},{"path":"/home/dude/Projects/django-vue-graphql/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1634293257960},{"path":"/home/dude/Projects/django-vue-graphql/frontend/node_modules/babel-loader/lib/index.js","mtime":1634293257962},{"path":"/home/dude/Projects/django-vue-graphql/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1634293257960},{"path":"/home/dude/Projects/django-vue-graphql/frontend/node_modules/vue-loader/lib/index.js","mtime":1634293263659}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQb3N0TGlzdCBmcm9tICdAL2NvbXBvbmVudHMvUG9zdExpc3QnCmltcG9ydCBncWwgZnJvbSAnZ3JhcGhxbC10YWcnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1Bvc3RzQnlUYWcnLAogIGNvbXBvbmVudHM6IHsKICAgIFBvc3RMaXN0LAogIH0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBwb3N0czogbnVsbCwKICAgIH0KICB9LAogIGFzeW5jIGNyZWF0ZWQgKCkgewogICAgY29uc3QgcG9zdHMgPSBhd2FpdCB0aGlzLiRhcG9sbG8ucXVlcnkoewogICAgICBxdWVyeTogZ3FsYHF1ZXJ5ICgkdGFnOiBTdHJpbmchKSB7CiAgICAgICAgcG9zdHNCeVRhZyh0YWc6ICR0YWcpIHsKICAgICAgICAgIHRpdGxlCiAgICAgICAgICBzdWJ0aXRsZQogICAgICAgICAgcHVibGlzaERhdGUKICAgICAgICAgIHB1Ymxpc2hlZAogICAgICAgICAgbWV0YURlc2NyaXB0aW9uCiAgICAgICAgICBzbHVnCiAgICAgICAgICBhdXRob3IgewogICAgICAgICAgICB1c2VyIHsKICAgICAgICAgICAgICB1c2VybmFtZQogICAgICAgICAgICAgIGZpcnN0TmFtZQogICAgICAgICAgICAgIGxhc3ROYW1lCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIHRhZ3MgewogICAgICAgICAgICBuYW1lCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9YCwKICAgICAgdmFyaWFibGVzOiB7CiAgICAgICAgdGFnOiB0aGlzLiRyb3V0ZS5wYXJhbXMudGFnLAogICAgICB9LAogICAgfSkKICAgIHRoaXMucG9zdHMgPSBwb3N0cy5kYXRhLnBvc3RzQnlUYWcKICB9LAp9Cg=="},{"version":3,"sources":["PostsByTag.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PostsByTag.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h2>Posts in #{{ $route.params.tag }}</h2>\n    <PostList :posts=\"posts\" v-if=\"posts\" />\n  </div>\n</template>\n\n<script>\nimport PostList from '@/components/PostList'\nimport gql from 'graphql-tag'\n\nexport default {\n  name: 'PostsByTag',\n  components: {\n    PostList,\n  },\n  data () {\n    return {\n      posts: null,\n    }\n  },\n  async created () {\n    const posts = await this.$apollo.query({\n      query: gql`query ($tag: String!) {\n        postsByTag(tag: $tag) {\n          title\n          subtitle\n          publishDate\n          published\n          metaDescription\n          slug\n          author {\n            user {\n              username\n              firstName\n              lastName\n            }\n          }\n          tags {\n            name\n          }\n        }\n      }`,\n      variables: {\n        tag: this.$route.params.tag,\n      },\n    })\n    this.posts = posts.data.postsByTag\n  },\n}\n</script>\n"]}]}